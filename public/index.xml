<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JW Blog</title>
    <link>https://jiwooblog.netlify.app/</link>
    <description>Recent content on JW Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 26 Jan 2020 04:15:05 +0900</lastBuildDate>
    
        <atom:link href="https://jiwooblog.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Real Number</title>
        <link>https://jiwooblog.netlify.app/posts/mathmaticalanalysis/2_real_number/</link>
        <pubDate>Sun, 11 Jul 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/mathmaticalanalysis/2_real_number/</guid>
        <description>실수 Real Number 내용 구성  Field Order  </description>
      </item>
      
      <item>
        <title>Tableau 꿀팁</title>
        <link>https://jiwooblog.netlify.app/posts/tableau/tableau_tip/</link>
        <pubDate>Sun, 11 Jul 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/tableau/tableau_tip/</guid>
        <description>1. 추천 사이트  태블로 기초 기능 (네이버 블로그)  </description>
      </item>
      
      <item>
        <title>다중 측정값 활용</title>
        <link>https://jiwooblog.netlify.app/posts/tableau/multiple_measure/</link>
        <pubDate>Sun, 11 Jul 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/tableau/multiple_measure/</guid>
        <description>다중 측정값 활용 Reference [1] 유튜브 PLANIT DATAV</description>
      </item>
      
      <item>
        <title>Chapter01</title>
        <link>https://jiwooblog.netlify.app/posts/linearalgebra/chapter01/</link>
        <pubDate>Wed, 07 Jul 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/linearalgebra/chapter01/</guid>
        <description>Chapter 01. Some problems posed on vector spaces 본 포스팅은 Finite Dimensional Linear Algebra (Gokenbach)를 참고하였다.
1. Linear Equations 2. Best Approximation 2-1. Overdetermined linear systems Orthogonality is a generalization of perpendicularity.
The range of any linear operator is a subspace of the co-domain.
2-2. Best approximation by a polynomial 3. Diagonalization 4. Summary 앞으로 나올 개념들 정리
 vector space field subspace spanning set basis linear operator kernel, range norm inner product orthogonal vectors projection coupled vs.</description>
      </item>
      
      <item>
        <title>생키 차트</title>
        <link>https://jiwooblog.netlify.app/posts/tableau/sankey_chart/</link>
        <pubDate>Tue, 30 Mar 2021 10:10:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/tableau/sankey_chart/</guid>
        <description>Intro 생키 차트(Sankey Chart)는 흐름(Flow)을 보여주기에 최적화된 차트 형태이다. 예를 들어 지역이나 국가 간의 에너지를 표현하는데에 적합하다.
  기본 전처리 코드(R)  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  library(tidyverse) library(xlsx) setwd(&amp;#39;C:/Users/bunga/Desktop/Tableau/data&amp;#39;) data &amp;lt;- read.table(&amp;#39;seoul_park_raw.txt&amp;#39;, header=TRUE, sep=&amp;#39;\t&amp;#39;) data &amp;lt;- as.tibble(data) data &amp;lt;- data %&amp;gt;% mutate(ym = (ym*100)%%100) data &amp;lt;- data %&amp;gt;% select(-total) data &amp;lt;- data[data[&amp;#39;region&amp;#39;] !</description>
      </item>
      
      <item>
        <title>한국 픽셀맵</title>
        <link>https://jiwooblog.netlify.app/posts/tableau/korea_pixel_map/</link>
        <pubDate>Tue, 30 Mar 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/tableau/korea_pixel_map/</guid>
        <description>Intro 본 포스팅은 WeViz 유튜브를 적극 참고하였습니다.
결과물  1. 팔레트 커스텀 추가 내 태블로 리포지토리 Preferences 파일에 색상 커스텀 추가
본 결과물에는 해당 참고사이트에서 추천한 색상 조합을 적용하였다.
2. 색상 참고 사이트 2-1. UI gradients (측정값 그라데이션) UI gradients
2-2. Adobe Color (차원 색조합) Adobe color
Reference [1] WeViz 유튜브</description>
      </item>
      
      <item>
        <title>맵 커스텀</title>
        <link>https://jiwooblog.netlify.app/posts/tableau/map_custom/</link>
        <pubDate>Tue, 30 Mar 2021 10:09:55 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/tableau/map_custom/</guid>
        <description>Intro 본 포스팅은 WeViz 유튜브를 적극 참고하였습니다.
결과물  1. 기본 수정  [맵] - [맵 계층] 스타일 어둡게 변경 기본도, 토지 피복도 체크박스 해제 해안선 체크  2. mapbox 이용하기  mapbox 홈페이지 Studio -&amp;gt; New Style -&amp;gt; Basic(다른 스타일 선택해도 무방)  2-1. 영역 색깔 바꾸기 특정 영역 클릭 후 색깔 변경
2-2. 폰트 바꾸기 STEP1. 텍스트는 기본적으로 자물쇠 잠금 해제(override) 클릭 후 변경 가능
STEP2. 특정 레이블을 선택 -&amp;gt; Components -&amp;gt; Typography</description>
      </item>
      
      <item>
        <title>코로나</title>
        <link>https://jiwooblog.netlify.app/posts/tableau/corona_map/</link>
        <pubDate>Tue, 30 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/tableau/corona_map/</guid>
        <description>Intro 본 포스팅은 WeViz 유튜브를 적극 참고하였습니다.
시각화에 관심이 있었는데, 해당 연합동아리 소속의 친구에게 추천을 받아서 참고하게 되었습니다.
결과물  배운점   구글 스프레드시트 GEOCODE 활용법
 경도(longitude), 위도(latitude) 자동 추출 기능    MAKELINE, MAKEPOINT 활용법
MAKELINE(MAKEPOINT(30.602101,114.316826), MAKEPOINT([Latitude],[Longitude]))
  맵 관리
 커스텀 맵 디자인 추가    Reference [1] WeViz 유튜브
[2] 데이터 출처</description>
      </item>
      
      <item>
        <title>esquisse</title>
        <link>https://jiwooblog.netlify.app/posts/r/%EC%8B%9C%EA%B0%81%ED%99%94/esquisse/</link>
        <pubDate>Fri, 19 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/%EC%8B%9C%EA%B0%81%ED%99%94/esquisse/</guid>
        <description>esquisse esquisse는 드래그 앤 드롭(drag &amp;amp; drop)으로 ggplot을 간단하게 그릴 수 있는 획기적인 패키지이다.
복잡한 커스터마이징은 디테일한 수정이 추가적으로 필요하겠지만, 간단한 특징들을 반복적인 코드수정과 확인과정을 거치기 않고서도 즉각적으로 그래프 모양을 확인할 수 있다는 큰 장점이 있다.
거의 Tableu 같은 느낌도 든다. 간단한 ggplot 그릴 때 또는 ggplot 입문자가 먼저 거쳐가도 좋을 것 같다.
1 2 3  library(ggplot2) library(dplyr) library(esquisse)   STEP1. Addins을 클릭하고, ggplot2 builder를 이어서 클릭한다.</description>
      </item>
      
      <item>
        <title>naniar</title>
        <link>https://jiwooblog.netlify.app/posts/r/%EC%8B%9C%EA%B0%81%ED%99%94/naniar/</link>
        <pubDate>Sun, 14 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/%EC%8B%9C%EA%B0%81%ED%99%94/naniar/</guid>
        <description>naniar 패키지 훑어보기 NA 관련해서 직관적으로 깔끔한 그래프로 훑어볼 수 있게 도와주는 패키지이다.
본 포스팅은 해당 사이트를 적극참고하여 작성하였다.
1 2  library(tidyverse) library(naniar)   vis_miss 1  vis_miss(airquality)   gg_miss_var 1  gg_miss_var(airquality)   1  gg_miss_var(airquality, show_pct = TRUE)   1  gg_miss_var(airquality, facet = Month)   gg_miss_case 1  gg_miss_case(airquality)   gg_miss_upset 1  gg_miss_upset(riskfactors)   1  n_var_miss(riskfactors)   ## [1] 241  gg_miss_upset(riskfactors, nsets = n_var_miss(riskfactors))   1  gg_miss_upset(riskfactors, nsets = 4) #nset: 변수 개수   1  gg_miss_upset(riskfactors, nsets = 10, nintersects = 5) #nintersects: 변수조합 수   geom_miss_point ggplot과 응용</description>
      </item>
      
      <item>
        <title>ML Intro</title>
        <link>https://jiwooblog.netlify.app/posts/machinelearning/intro/</link>
        <pubDate>Thu, 11 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/machinelearning/intro/</guid>
        <description>Machine Learning  주어진 데이터를 통해서 입력변수와 출력변수 간의 관계를 만드는 함수 $f$를 만드는 것 주어진 데이터 속에서 데이터의 특징을 찾아내는 함수 $f$를 만드는 것  1. 기본 개념구분  지도 학습: 회귀(Regression), 분류(Classification) 비지도 학습: PCA, 군집분석 강화 학습: 수많은 시뮬레이션을 통해 현재의 선택이 먼 미래에 보상이 최대로 하는 action을 학습  2. 다양한 머신러닝 기법  선형회귀분석: 선형관계를 가정하여, 독립변수의 중요도와 영향력 파악 DT(Decision Tree): 독립변수의 조건에 따라 종속변수를 분리 KNN(K-Nearest Neighbor): 새로 들어온 데이터의 주변 K개의 데이터의 class로 분류 NN(Neural Network): 입력층/은닉층/출력층 으로 구성된 모형.</description>
      </item>
      
      <item>
        <title>중심극한정리</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/central_limit_theorem/</link>
        <pubDate>Sun, 21 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/central_limit_theorem/</guid>
        <description>중심극한정리(Central Limit Theorem)모분포가 어떤 분포이든 상관없이, 평균이 $\mu$이고, 분산이 $\sigma^2$인 분포로부터 무작위로 n개의 샘플을 얻는 다고 가정하자. (이때, $\sigma^2 &amp;lt; \infty$라는 조건을 만족한다고 가정하자.)n이 충분히 크면, 표본평균의 분포는 평균이 $\mu$이고, 분산이 $\sigma^2/\sqrt{n}$인 정규분포로 근사한다.이를 수식으로 표현하면, $Y_n = \frac{\sqrt{n}(\bar{X_n} - \mu)}{\sigma} \stackrel{\cdot}\sim N(0,1) $
*주의사항: 표본이 아니라 표본평균의 분포에 대한 이야기이다.
MGF(적률생성함수)를 활용한 증명우선, 정규분포의 mgf가 아래와 같다는 사실을 인지하고, mgf가 분포결정성을 갖는다는 것을 받아들이고 시작하자.</description>
      </item>
      
      <item>
        <title>확률분포</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/probability_distribution/</link>
        <pubDate>Sun, 21 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/probability_distribution/</guid>
        <description>확률분포(Probability Distribution) 출처: https://artificialnetworkforstarters.readthedocs.io/en/latest/_post/chap6.html  -- 연속형(Continuous)  정규 분포 T-분포 감마 분포 베타 분포 카이제곱 분포 F-분포 균일 분포 디리클레 분포 위샤트 분포
&amp;hellip;  이산형(Discrete)  이항 분포 다항 분포 베르누이 분포 포아송 분포 음이항 분포 기하 분포 초기하 분포
&amp;hellip;  정규 분포(Normal Distribution)   정규분포  $$ \text{X~} N(\mu, \sigma^2) \rightarrow f(x) = \frac{1}{\sqrt{2\pi\sigma^2}} \exp(-\frac{(x-\mu)}{2\sigma^2}^2) $$
$$ E(X) = \mu, Var(X) = \sigma^2$$   다변수 정규분포(Multivariate Normal Distribution) 관련 포스팅 참고</description>
      </item>
      
      <item>
        <title>개요</title>
        <link>https://jiwooblog.netlify.app/posts/spss/prologue/</link>
        <pubDate>Thu, 18 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/spss/prologue/</guid>
        <description>Index  통계학이란?  표본분포 모수 검정 &amp;amp; 비모수 검정   기술통계  데이터 유형 분포의 이해 CLT   가설검정  양방향 &amp;amp; 단방향   정규성 검정  Kolmogorov-Smirnov test(표본 50개 이상) Shapiro-Wilk test(표본 50개 이하) 모수적 접근 &amp;amp; 비모수적 접근   단일집단 평균  모수적 접근(one sample t-test) 비모수적 접근(Kolmogorov-Smirnov test, Runs 검정)   독립 두 집단 평균  모수적 접근(independent t-test) 비모수적 접근(Mann-Whitney U-test, Wilcoxon rank-sum test, Kolmogorov-Smirnov test, 중앙값 검정)   대응 두 집단 평균  모수적 접근(paired t-test) 비모수적 접근(sign test, Wilcoxon signed rank test)   독립 세 집단 이상 평균  모수적 접근(ANOVA) 비모수적 접근(Kruskal-Wallis test) 사후분석(Bonferroni)   종속 세 집단 이상 평균  비모수적 접근(Cochran Q test, Friedman test)   카이제곱검정(범주형 데이터)  독립성 검정 적합도 검정 동질성 검정   상관분석  모수적 접근 비모수적 접근(Spearman 상관계수, Kendall 순위 상관계수, Kendall 편 순위 상관계수, Kendall 일치도 계수)    </description>
      </item>
      
      <item>
        <title>미분</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/calculus/1_differentiation/</link>
        <pubDate>Sun, 07 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/calculus/1_differentiation/</guid>
        <description>미분(Differentiation) 1. Chain Rule $$\frac{dy}{dx} = \frac{dy}{du} \times \frac{du}{dx}$$
2. Product Rule $$\frac{dy}{dx} = \frac{du}{dx}v + u\frac{dv}{dx}$$
이를 다르게 쓰면,
$$y = f(x)g(x)$$
$$\rightarrow y&#39;=f&#39;(x)g(x)+f(x)g&#39;(x)$$
3. Quotient Rule $$y = \frac{f(x)}{g(x)}$$
$$\rightarrow y&#39; = \frac{f&#39;(x)g(x) - f(x)g&#39;(x)}{g^2(x)}$$
4. Implicit Differentiation $$\frac{d}{dx}[f(y)] = \frac{d}{dy}[f(y)] \times \frac{dy}{dx} $$</description>
      </item>
      
      <item>
        <title>Python 꿀팁</title>
        <link>https://jiwooblog.netlify.app/posts/python/python_tip/</link>
        <pubDate>Sun, 31 Jan 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/python/python_tip/</guid>
        <description>1. 추천 사이트  pandas_exercises  2. 추천 책  Python for Data Analysis (Wes McKinney)  3. 검색 팁 구글링 시, 뒤에 &amp;lsquo;towards data science&amp;rsquo; 또는 &amp;lsquo;medium&amp;rsquo; 붙이기
하루 열람 제한이 있는데, 더 읽고 싶은 경우는 Chrome 시크릿 모드를 활용하면 제한이 풀린다.</description>
      </item>
      
      <item>
        <title>January 2021</title>
        <link>https://jiwooblog.netlify.app/updates/diary/2021_01/</link>
        <pubDate>Fri, 22 Jan 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/diary/2021_01/</guid>
        <description>2021.1.30  또 다시 보니 11.18달러 과금으로 계속 증가하고 있어서 이것저것 최대한 삭제하고 계정도 해지했다. 90일 동안 또 다시 과금이 되는지 지속적으로 살펴봐야겠다. 그리고 해지한 메일 계정으로는 다시 계정 개설이 안된다길래 hanmail.net으로 수정한 후 삭제했다. 참고사이트는 두 곳을 참고했다. 참고사이트1, 참고사이트2 제발 다음에는 과금 안 되길&amp;hellip;AWS는 너무 어려운 것 같다. 나중에 AWS에 조금 더 관심이 생기면 참고사이트2의 다양한 포스트들을 참고해도 좋을 것 같다.  2021.1.15  다시 보니 10.68달러 과금으로 증가해있어서 얼른 RDS를 삭제했다.</description>
      </item>
      
      <item>
        <title>To Do List</title>
        <link>https://jiwooblog.netlify.app/updates/todo_list/</link>
        <pubDate>Fri, 22 Jan 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/todo_list/</guid>
        <description>To Do List 1. Want to Upload Posts   프로젝트들 정리
 Rhino: 수소차 충전소 입지 선정 [ESC 2020_SUMMER] 빅콘테스트 NS Shop+ 심리성향 예측 AI 경진대회 [ESC 2020_FALL] NLP 논문 따라해보기 [ESC 2020_SPRING] 행복지수 예측
- 배운 점: 해석 시 Domain Knowledge의 중요성, FA의 효과    R 다양한 기능들 정리
 dpylr: group_by, summarise, mutate, select, filter 시각화
2-1. ggplot2
2-2. plotly
2-3. highcharter
2-4. g2r
2-5. rayshader</description>
      </item>
      
      <item>
        <title>쇼핑 리스트</title>
        <link>https://jiwooblog.netlify.app/updates/shopping_list/</link>
        <pubDate>Fri, 22 Jan 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/shopping_list/</guid>
        <description>2021년 7월    주문날짜 제품명 브랜드 금액 쇼핑몰 비고     07.09 오픈카라셔츠 검정/옐로우 비슬로우 퍼플 64,000원 무신사    07.15 후드 플리츠 스웨트셔츠 자라 15,000원 자라 공홈     2021년 6월    주문날짜 제품명 브랜드 금액 쇼핑몰 비고     06.13 스톤 팔찌 이자벨마랑 56,005원 미스터포터    06.15 플뢰르 드 패츌리(오드 퍼퓸) 40ml 자라 32,000원 자라    06.</description>
      </item>
      
      <item>
        <title>Unix &amp; AWS</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part2_1/</link>
        <pubDate>Mon, 11 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part2_1/</guid>
        <description>Part 2-1. 데이터 엔지니어 기초 다지기 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Unix 환경 및 커맨드 cd
mkdir
ls
cp
./run.sh
chmod +x run.sh: Permission denied 되었을 때, 권한 부여하기
run.sh 코드(참고용) #!/bin/bashpython examply.py 1 &amp;gt; example.txtpython examply.py 2 &amp;gt; example.txt*주의사항: python 대신에 python3를 쓰면 Windows에서는 오류가 날 수도 있다.
2. AWS 기초 및 CLI 세팅 AWS CLI (Command Line Interface) 다운로드
 IAM에서 사용자 추가하기 Windows Powershell에다가 aws configure 입력하기 액세스 키 ID와 비밀 액세스 키 입력하기  이는 앞으로 shell에서 aws command를 쳐도 가능하게끔 세팅해놓는 것이다.</description>
      </item>
      
      <item>
        <title>MVN</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/mvn/</link>
        <pubDate>Fri, 08 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/mvn/</guid>
        <description>1. Drawing MVN plots with ggplot2 1 2  mu = matrix(c(0,10), ncol=1) invSig = solve(matrix(c(4,10,10,100), ncol=2, byrow=TRUE))   1-1. Vectorize + Outer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  dmvlnorm = function(theta, mu, invSig){ (-nrow(mu)/2) * log(2*pi) + 0.5*log(det(invSig)) - 0.5*(t(theta-mu) %*% invSig %*% (theta-mu)) } calc.dens = Vectorize(function(a,b){ theta = c(a,b) exp(dmvlnorm(theta, mu, invSig)) }) A = seq(-5, 5, length=100) B = seq(-15, 40, length=100) dense = outer(A, B, FUN=calc.</description>
      </item>
      
      <item>
        <title>Lecture 01</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/linearalgebra/l01/</link>
        <pubDate>Thu, 07 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/linearalgebra/l01/</guid>
        <description>Vector Space  덧셈에 닫혀있다. 스칼라배에 닫혀있다.  Subspace 벡터공간 $V_n$ 의 부분 집합 $W_n$이 벡터공간이면, $W_n$을 $V_n$의 부분공간이라고 한다. 즉, $W_n$이 부분공간이려면, 덧셈과 스칼라배에 닫혀있으면 된다.
Gauss-Jordan Elimination  확장행렬을 기약행사다리꼴(RREF, reduced row echelon form)로 바꾸는 알고리즘 가우스조던 소거법 = 가감법 + 대입법  선형사상의 특징  가산성 $f(x+y) = f(x) + f(y)$ 동차성 $f(ax) = af(x)$  LU Decomposition $E_{k}...E_{2}E_{1}A = U$
=&amp;gt; $A = E_{1}^{-1}E_{2}^{-1}...E_{k}^{-1}U = LU$  여기서 $E_{k}.</description>
      </item>
      
      <item>
        <title>What is Bayesian</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb01/</link>
        <pubDate>Thu, 07 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb01/</guid>
        <description>Chapter 01. Introduction and Examples 본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
이번 장을 통해서는 Likelihood and Prior를 살펴보고 Full probability model의 의미를 보는 데에 주목해보쟈.
베이지안 추론의 목적 우리는 데이터 획득을 통해, 모집단 특성에 대한 불확실성을 줄여나가고자 한다. 이때, 불확실성 정도의 변화 수준을 계량화하는 것이 베이지안 추론통계의 목적이라고 할 수 있다.
핵심 개념  prior distribution $p(\theta)$  사전확률 모수에 대해 기존에 갖고 있던 믿음의 정도   sampling model $p(y|\theta)$  일종의 가능도 함수(likelihood) 사전확률이 참이라는 가정 하에, 특정 데이터가 관찰된 확률   posterior distribution $p(\theta|y)$  데이터가 관찰되었을 때, 이를 바탕으로 수정된 모수에 대한 믿음의 정도    Bayes&#39; Rule $$p(\theta|y) = \frac{p(y|\theta)p(\theta)}{\int_{\Theta}p(y|\tilde{\theta})p(\tilde{\theta})d\tilde{\theta}}$$</description>
      </item>
      
      <item>
        <title>수강과목</title>
        <link>https://jiwooblog.netlify.app/posts/yonsei/psychology/lecture/</link>
        <pubDate>Tue, 28 Jan 2020 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/yonsei/psychology/lecture/</guid>
        <description>심리학 수강 과목  심리학개론 충동과자기관리 심리학의 실험연구방법 발달심리학 행복의 과학 언어심리학 이론 및 실습 인지신경과학의 기초 심리통계 학습과 기억의 심리학 UT세미나(실패와 좌절의 심리학) 성격심리학 재능과 기술의 심리학 인지공학심리학 산업심리학  </description>
      </item>
      
      <item>
        <title>수강과목</title>
        <link>https://jiwooblog.netlify.app/posts/yonsei/statistics/lecture/</link>
        <pubDate>Tue, 28 Jan 2020 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/yonsei/statistics/lecture/</guid>
        <description>통계학 수강 과목  통계학입문 미분적분학 통계방법론 선형대수 컴퓨터자료처리 심리통계 데이터사이언스를 위한 확률과정 회귀분석 수리통계학(1) 베이즈통계 수리통계학 (2) 시계열분석 금융리스크관리 실무와 통계학 UT세미나(생물통계학) 범주형자료분석 데이터사이언스입문 데이터마이닝 이론통계학(1) 데이터사이언스(2): 네트워크 자료분석  </description>
      </item>
      
      <item>
        <title>YZ 투자자 프로파일링</title>
        <link>https://jiwooblog.netlify.app/posts/dacon/nh_yz/</link>
        <pubDate>Thu, 02 Jan 2020 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dacon/nh_yz/</guid>
        <description>NH투자증권 Y&amp;amp;Z세대 투자자 프로파일링 본 대회는 NH투자증권에서 주최한 대회로, 2020년 급격하게 늘어난 20~30대 투자자들에 대한 분석을 하고 이를 시각화하는 것이 주목적이었다.
코드가 상당히 복잡한 관계로 Dacon에 코드공유한 링크와 이미지 일부를 올리는 것으로 포스팅을 대체하고자 한다.
Dacon 코드 공유 Factor Analysis Word Cloud_국내 Word Cloud_해외 Cluster Polygon Cluster Characteristics Idea Table Idea Sample Domain Knowledge 1. 해외주식 소수점 거래  현재 신한금융투자, 한국투자증권에서 실현 중 의결권, 배당권을 빼고 소수점 거래 가능! (ex.</description>
      </item>
      
      <item>
        <title>LUP &amp; MSP</title>
        <link>https://jiwooblog.netlify.app/posts/mathmaticalanalysis/3_lup_msp/</link>
        <pubDate>Sun, 11 Jul 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/mathmaticalanalysis/3_lup_msp/</guid>
        <description>LUP &amp;amp; MSP completeness에 대해서 알아보자
내용 구성  LUP (Least Upper Bound Property) MSP (Monotone Sequence Property)  </description>
      </item>
      
      <item>
        <title>Chapter02</title>
        <link>https://jiwooblog.netlify.app/posts/linearalgebra/chapter02/</link>
        <pubDate>Sat, 10 Jul 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/linearalgebra/chapter02/</guid>
        <description>Chapter 02. Fields and Vector Spaces 본 포스팅은 Finite Dimensional Linear Algebra (Gokenbach)를 참고하였다.
Conclusion 해석학을 배울 필요가 있을지도? 혹시 궁금한 점이나 잘못된 내용이 있다면, 댓글로 알려주시면 적극 반영하도록 하겠습니다. </description>
      </item>
      
      <item>
        <title>변수 변환</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/variable_transformation/</link>
        <pubDate>Sat, 03 Apr 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/variable_transformation/</guid>
        <description>Variable Transformation변수변환1. 적분변수변환은 적분할 때 유용하게 쓰인다. 예를 들어, 아래와 같은 경우를 생각해보자.
\[\int_1^5 \frac{2x}{x^2+1}dx\]이때는 $x^2+1 = t$로 치환해서 적분해주면, $2xdx = dt$로 바뀌므로
\[\int_2^{26}\frac{1}{t}dt = \Big[log\ t\Big]_{2}^{26} = log13\]
이렇게 쉽게 구할 수 있다.
2. 확률변수하지만 꼭 적분할 때만 변수변환이 유용한 것은 아니다. 베이지안이 prior를 부여할 때 확률변수를 변수변환해가며 생각하는 경우가 있는데, 이에 대해서 아래에서 이야기해보도록 하겠다.
2-1. 일변수우선은 일변수일 때 예시는 Jeffrey’s Prior를 이야기하는 포스팅에서 살펴보면 될 것이다.</description>
      </item>
      
      <item>
        <title>lubridate</title>
        <link>https://jiwooblog.netlify.app/posts/r/lubridate/</link>
        <pubDate>Fri, 19 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/lubridate/</guid>
        <description>lubridate 패키지 훑어보기 lubridate는 날짜 데이터를 처리하기 위한 패키지입니다.
1  library(lubridate)    목차  parse datetimes  1. parse datetimes   다양한 형태 #1  1 2 3 4 5 6 7 8 9 10 11  # 다양한 형태가 있다. # ymd_hms(), ymd_hm(), ymd_h() # ydm_hms(), ydm_hm(), ydm_h() # mdy_hms(), mdy_hm(), mdy_h() # dmy_hms(), dmy_hm(), dmy_h() # ymd(), ydm() # mdy(), myd() # dmy(), dym() # yq() Q for quarter ymd_hms(&amp;#34;2017-11-28T14:02:00&amp;#34;)   ## [1] &amp;quot;2017-11-28 14:02:00 UTC&amp;quot;1  ydm_hms(&amp;#34;2017-22-12 10:00:00&amp;#34;)   ## [1] &amp;quot;2017-12-22 10:00:00 UTC&amp;quot;1  mdy_hms(&amp;#34;11/28/2017 1:02:03&amp;#34;)   ## [1] &amp;quot;2017-11-28 01:02:03 UTC&amp;quot;1  dmy_hms(&amp;#34;1 Jan 2017 23:59:59&amp;#34;)   ## [1] &amp;quot;2017-01-01 23:59:59 UTC&amp;quot;1  ymd(20170131)   ## [1] &amp;quot;2017-01-31&amp;quot;1  mdy(&amp;#34;July 4th, 2000&amp;#34;)   ## [1] &amp;quot;2000-07-04&amp;quot;1  dmy(&amp;#34;4th of July &amp;#39;99&amp;#34;)   ## [1] &amp;quot;1999-07-04&amp;quot;1  yq(&amp;#34;2001: Q3&amp;#34;)   ## [1] &amp;quot;2001-07-01&amp;quot;     다양한 형태 #2  1  today()   ## [1] &amp;quot;2021-03-23&amp;quot;1  now()   ## [1] &amp;quot;2021-03-23 11:24:45 KST&amp;quot;1  date_decimal(2021.</description>
      </item>
      
      <item>
        <title>Entropy, KL-Divergence</title>
        <link>https://jiwooblog.netlify.app/posts/machinelearning/entorpy_kld/</link>
        <pubDate>Thu, 11 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/machinelearning/entorpy_kld/</guid>
        <description>Entropy정보량 = 불확실성\[\begin{align}H(p) &amp;amp;= \sum_{i=1}p_i log\frac{1}{p_i} \\&amp;amp;= -\sum_{i=1}p_i log(p_i)\end{align}\]
여기서 $\frac{1}{p_i}$는 발생확률의 역수로, 다르게 보면 가능한 결과의 수라고 볼 수 있다.
그렇기 때문에 $log\frac{1}{p_i}$는 필요한 질문의 수라고 생각할 수 있다.
합쳐서 생각해보면, 정보량이라고 하는 것은 필요한 질문의 수 x 확률의 총합이라고 생각할 수 있다.
Cross Entropyp에 대해, 전략 Q를 사용했을 때의 불확실성즉, 특정 전략을 쓸 때, 예상되는 질문개수에 대한 기댓값</description>
      </item>
      
      <item>
        <title>tidyr</title>
        <link>https://jiwooblog.netlify.app/posts/r/tidyr/</link>
        <pubDate>Sun, 28 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/tidyr/</guid>
        <description>tidyr 패키지 훑어보기 tidyr은 tidy data를 형성하기 위해 고안된 패키지입니다. tidy data에서 1) 열은 변수를 의미하고, 2) 행은 하나의 케이스를 의미하며, 3) 하나의 셀은 하나의 값을 의미합니다.
1  library(tidyverse)    목차  nest  nest 예시를 통해, 단순히 group_by를 하는 것과 group_by 이후 nest를 한 후에 어떻게 데이터가 정리되는지 확인해보자.
  nest 예시  1 2  iris %&amp;gt;% group_by(Species)   ## # A tibble: 150 x 5## # Groups: Species [3]## Sepal.</description>
      </item>
      
      <item>
        <title>February 2021</title>
        <link>https://jiwooblog.netlify.app/updates/diary/2021_02/</link>
        <pubDate>Mon, 22 Feb 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/diary/2021_02/</guid>
        <description>2021.02.26  hugo theme 중 zzo와 zdoc은 다른 것이다. zzo 참고사이트 zdoc 참고사이트  </description>
      </item>
      
      <item>
        <title>대회 리스트</title>
        <link>https://jiwooblog.netlify.app/updates/contest_list/</link>
        <pubDate>Mon, 22 Feb 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/contest_list/</guid>
        <description>대회 리스트  빅콘테스트 데이콘(Dacon) 서울특별시 빅데이터 캠퍼스 공모전 한국정보화진흥원 데이터 크리에이터 캠프 상권분석 빅데이터 경진대회 KB 국민은행 Future Finance Ai Challenge 빅데이터 활용정책 아이디어 공모전 Big Data Competition 미래에셋대학생디지털 금융페스티벌  </description>
      </item>
      
      <item>
        <title>dplyr</title>
        <link>https://jiwooblog.netlify.app/posts/r/dplyr/</link>
        <pubDate>Sun, 21 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/dplyr/</guid>
        <description>dplyr 패키지 훑어보기 1 2  library(tidyverse) library(MASS)   목차  rowwise
1-1. pmax slice relocate lag, lead between, near coalsece recode first, last, nth rownames_to_column, column_to_rownames bind_rows, bind_cols mutate_all, mutate_if inner_join, left_join, right_join, full_join semi_join, anti_join  데이터   data  1 2 3 4  tmp &amp;lt;- tibble(x=round(rnorm(n=5, mean=5, sd=1)), y=round(rnorm(n=5, mean=5, sd=3)), z=round(rnorm(n=5, mean=5, sd=5))) tmp   ## # A tibble: 5 x 3## x y z## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 6 7 -1## 2 5 4 -2## 3 5 2 6## 4 6 2 12## 5 5 4 21 2  data(survey) glimpse(survey)   ## Rows: 237## Columns: 12## $ Sex &amp;lt;fct&amp;gt; Female, Male, Male, Male, Male, Female, Male, Female, Male, .</description>
      </item>
      
      <item>
        <title>purrr</title>
        <link>https://jiwooblog.netlify.app/posts/r/purrr/</link>
        <pubDate>Sun, 21 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/purrr/</guid>
        <description>purrr 패키지 훑어보기 purrr는 R에서 깔끔하게 반복 작업 처리하는 패키지입니다. Purrr 을 이용하면 반복작업을 Apply family 에 비해 더욱 직관적이고 쉽게 할 수 있습니다. purrr는 고양이 울음소리와 R의 합성어로, 로고는 아래와 같습니다.
1  library(tidyverse)   목차  map, map2 pmap, invoke_map rerun every, some, none reduce, accumulate  map, map2   map, map2 예시  1 2 3 4 5  num &amp;lt;- c(1,2,4,5,7) num2 &amp;lt;- c(3,5,6,8,9) #list map(num, function(x){x^2})   ## [[1]]## [1] 1## ## [[2]]## [1] 4## ## [[3]]## [1] 16## ## [[4]]## [1] 25## ## [[5]]## [1] 491  map2(num, num2, sum)   ## [[1]]## [1] 4## ## [[2]]## [1] 7## ## [[3]]## [1] 10## ## [[4]]## [1] 13## ## [[5]]## [1] 161 2  #numeric vector map_dbl(num, function(x){x^2})   ## [1] 1 4 16 25 491  map2_dbl(num, num2, sum)   ## [1] 4 7 10 13 16     map 실전활용- iris data  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  n_iris &amp;lt;- iris %&amp;gt;% group_by(Species) %&amp;gt;% nest() mod_fun &amp;lt;- function(df){ lm(Sepal.</description>
      </item>
      
      <item>
        <title>R 꿀팁</title>
        <link>https://jiwooblog.netlify.app/posts/r/r_tip/</link>
        <pubDate>Sun, 31 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/r_tip/</guid>
        <description>1. 추천 사이트  R for data science  2. 검색 팁 구글링 시, 뒤에 &amp;lsquo;Rpubs&amp;rsquo; 붙이기
3. blogdown Auto-Knit 끄기 Ctrl+S 단축키로 수시로 저장하는 습관 때문에, Rmd 파일을 작업할 때 knit가 수시로 되어 작업속도에 영향을 미친다.
이럴 때는 .Rprofile이라는 이름의 파일을 찾아서
 blogdown.knit.on_save = TRUE
 라는 코드에서 TRUE를 FALSE로 바꿔주어야 한다.
4. 자동정렬 단축키 ctrl + I
5. python의 dictionary처럼 사용하기 1 2 3 4 5  # recode: case_when의 특수한 형태로서 데이터를 교체할 때 사용할 수 있을 것이다.</description>
      </item>
      
      <item>
        <title>NA Imputation</title>
        <link>https://jiwooblog.netlify.app/posts/r/na_imputation/</link>
        <pubDate>Sat, 23 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/na_imputation/</guid>
        <description>데이터 설명dataset containing demographic data and laboratory data of 857 patients with acute coronary syndrome(ACS).
# 변수별 NA값 확인colSums(is.na(acs))## age sex cardiogenicShock entry ## 0 0 0 0 ## Dx EF height weight ## 0 134 93 91 ## BMI obesity TC LDLC ## 93 0 23 24 ## HDLC TG DM HBP ## 23 15 0 0 ## smoking ## 0colSums(is.na(acs))[colSums(is.na(acs))&amp;gt;0]## EF height weight BMI TC LDLC HDLC TG ## 134 93 91 93 23 24 23 15na.</description>
      </item>
      
      <item>
        <title>SQL 기초 (SQLite)</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part2_2/</link>
        <pubDate>Mon, 11 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part2_2/</guid>
        <description>Part 2-2. 데이터 엔지니어 기초 다지기 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
3. SQLite Studio SQLite Studio 다운로드
데이터 다운로드  editor 여는 법: Tools &amp;gt; Open SQL Editor (or Alt + E) SQLite과 MySQL을 포함한 다른 프로그램들과 코드가 다른 것들이 사소하게 있을 수 있다.  SQL 기본 문법 (1) SELECT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  SELECT * FROM Salaries LIMIT 10; SELECT * FROM Salaries ORDER BY salary DESC LIMIT 10; SELECT * FROM Salaries WHERE yearID = &amp;#39;2010&amp;#39; AND lgID = &amp;#39;AL&amp;#39; ORDER BY salary DESC LIMIT 20; --SUM, AVG SELECT SUM(salary) FROM Salaries WHERE playerID = &amp;#39;rodrial01&amp;#39;; --Concat, Count, Group By SELECT nameFirst || &amp;#39; &amp;#39; || nameLast AS name FROM People Limit 10; SELECT nameFirst || &amp;#39; &amp;#39; || nameLast AS name FROM People Where playerID = &amp;#39;rodrial01&amp;#39;; SELECT COUNT(DISTINCT(nameFirst || &amp;#39; &amp;#39; || nameLast)) FROM People; SELECT nameFirst || &amp;#39; &amp;#39; || nameLast AS name, COUNT(*) FROM People GROUP BY name HAVING COUNT(*) &amp;gt; 1; SELECT teamID, SUM(Salary) as total_salary FROM Salaries GROUP BY teamID ORDER BY total_salary DESC;   SQL 기본 문법 (2) JOIN 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  --Join SELECT t2.</description>
      </item>
      
      <item>
        <title>Exchangeability</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb02/</link>
        <pubDate>Thu, 07 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb02/</guid>
        <description>Chapter 02. Belief, Probability and Exchangeability본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.이번 장의 목표는 independence와 exchangeability를 이해하는 것이다. 이를 바탕으로 de Finetti’s theorem이 Bayesian에 갖는 의의를 이해한다면, 베이즈 통계를 공부할 준비가 된 것이다.
Belief functions and Probabilities$Be()$는 belief function이라고 하자. 예를 들어, $Be(F) &amp;gt; Be(G)$는 G보다 F를 더 믿는다고 해석하면 된다. F, G, H를 아래와 같은 각각의 상황이라고 가정해보자.
F : 좌파 후보자를 투표하는 경우 G : 소득이 하위 10%에 속하는 경우 H : 대도시에 거주하는 경우</description>
      </item>
      
      <item>
        <title>Exponential Family</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/exponential_family/</link>
        <pubDate>Sun, 07 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/exponential_family/</guid>
        <description>Exponential Family 한국어로는 지수족 또는 지수류라고도 하지만, 영어로 보는 편이 직관적으로 받아들이는 데에 편할 것이다.
$f(x;\theta) = \begin{cases}exp\big[p(\theta)K(x) + s(x) + q(\theta)\big] &amp;amp; x \in S \\0 &amp;amp; o.w\end{cases} $
 S does not depend on $\theta$ $p(\theta)$ is a nontrivial continuous function of $\theta \in \Omega$
3-1. If X is continuous, $K&#39;(x) \neq 0$ and $s(x)$ is continuous function.
3-2. If X is discrete, $K(x)$ is nontrivial function.</description>
      </item>
      
      <item>
        <title>March 2021</title>
        <link>https://jiwooblog.netlify.app/updates/diary/2021_03/</link>
        <pubDate>Sat, 06 Mar 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/diary/2021_03/</guid>
        <description>2021.03.06  문득 빈도론자와 베이지안의 논쟁이 쿤과 포퍼의 과학철학 논쟁과 비슷하다는 생각을 했다. 빈도론자는 가설검정이라는 것을 하며 귀무가설과 대립가설을 놓고 검정통계량을 통해 기각하거나 채택을 한다. 반면, 베이지안은 철저하게 베이즈 이론만을 기반으로 하여 분포를 제시하여 가능성을 제시한다. 포퍼가 반증가능성을 이야기했다면, 쿤은 이를 비판하며 패러다임의 전환에 대해 이야기했다.  2021.03.28  대학원 진학을 하기 위해 어느 정도 고민을 마쳤지만, 생각보다 마음이 덜 잡힌 것 같다. 열품타를 사용하고 있는데 생각보다 좋은 것 같다. 더 잘 활용해보도록 해야겠다.</description>
      </item>
      
      <item>
        <title>비모수통계학</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/nonparametric/</link>
        <pubDate>Wed, 24 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/nonparametric/</guid>
        <description>비모수통계학 비모수통계학(nonparametric statistics)는 모수적 검정의 가정이 충족되지 못하거나, 데이터 형식이 순서형일 경우처럼 일반적이지 않은 경우에 사용하는 통계적 방법론에 대한 연구를 한다.
t검정에서 독립표본 t-검정과 대응표본 t-검정이 있습니다. 이에 대응하여 비모수통계학에서는 Wilcoxon rank-sum test(Mann-Whitney U-test)와 Wilcoxon signed-rank test가 있습니다.
1. Wilcoxon rank-sum test Mann-Whitney U-test라고도 한다.
독립표본 t-검정의 비모수 버전이다.
2. Wilcoxon signed-rank test 대응표본 t-검정의 비모수 버전이다.
참고 [1] 연세대학교 심리통계 2019-1 수업자료 [2] https://blog.naver.com/istech7/50152096673
[3] http://www.incodom.kr/R%ED%99%9C%EC%9A%A9/Wilcoxon_Signed-Rank_Test
[4] https://dermabae.tistory.com/159</description>
      </item>
      
      <item>
        <title>ANOVA</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/anova/</link>
        <pubDate>Mon, 22 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/anova/</guid>
        <description>ANOVA ANOVA는 Analysis of Variance의 약자로, 한국어로는 분산 분석이라고 한다. 집단 간 분산과 집단 내 분산을 비교하여 처리효과가 있는지 살펴보는 통계방법이다.</description>
      </item>
      
      <item>
        <title>t 검정</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/t_test/</link>
        <pubDate>Mon, 22 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/t_test/</guid>
        <description>t-검정 t-검정은 모집단의 분산이나 표준편차를 알지 못할 때, 모집단을 대표하는 표본으로부터 추정된 분산이나 표준편차를 가지고 검정하는 방법이다.
1. 단일표본 t-검정 모집단의 평균이 특정검정값과 같은지 확인하는 통계빵법이다.
2. 독립표본 t-검정 독립된 두 집단 간 비교하는 방법으로, 서로 다른 두 모집단으로부터 데이터가 추출되었을 때 시행한다.
1 2 3 4 5 6 7 8  # independent t-test x1 = 3.6667 x2 = 6.0667 s1 = 2.60951 s2 = 2.37447 n1 = n2 = 15 sp = sqrt((s1^2*(n1-1) + s2^2*(n2-1)) / ((n1-1) + (n2-1))) t = (x1-x2) / (sp*sqrt(1/n1 + 1/n2))   3.</description>
      </item>
      
      <item>
        <title>신뢰구간, 신용구간</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/interval/</link>
        <pubDate>Sun, 21 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/interval/</guid>
        <description>신뢰구간과 신용구간 간단하게 구분하자면, 신뢰구간은 빈도주의자가, 신용구간은 베이지안이 사용하는 것이다.
일반적으로 신용구간을 신뢰구간으로 착각하는 경우가 많다.
신뢰구간 (Confidence Interval) “If we repeat the experiment infinitely many times, 95% of the experiments will capture the population parameter in their confidence intervals.” 해석하자면, 무수히 많이 반복하여 데이터를 얻고 신뢰구간을 산출한다면, 그 수많은 신뢰구간 중 95%는 모수를 갖고 있을 것으로 신뢰한다는 의미이다. 그렇기 때문에 한번의 실험결과만으로 신뢰구간을 구하고 이를 활용하는 데에는 다소 무리가 있어보인다.</description>
      </item>
      
      <item>
        <title>정규성 검정</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/normality/</link>
        <pubDate>Sun, 21 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/normality/</guid>
        <description>정규성 검정 </description>
      </item>
      
      <item>
        <title>삼각함수공식</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/calculus/3_trigonometry/</link>
        <pubDate>Fri, 19 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/calculus/3_trigonometry/</guid>
        <description>삼각함수 공식(Trigonometric Functions) $\sin^2{x} + \cos^2{x} = 1 $
$\tan^2{x} + 1 = \sec^2{x} $
$\cos{2x} = 1 - 2\sin^2{x} = 2\cos^2{x} -1 $
$\frac{d}{dx}\tan{x} = \sec^2{x} $
$\frac{d}{dx}\sec{x} = \sec{x}\tan{x} $</description>
      </item>
      
      <item>
        <title>pygame[기초]</title>
        <link>https://jiwooblog.netlify.app/posts/python/pygame_1/</link>
        <pubDate>Mon, 15 Feb 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/python/pygame_1/</guid>
        <description>Pygame 기초 본 포스팅은 해당 사이트(https://kkamikoon.tistory.com/129)를 적극참고 하였습니다.
코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import pygame pygame.init() BLACK = (0,0,0) WHITE = (255,255,255) BLUE = (0,0,255) GREEN = (0,255,0) RED = (255,0,0) size = [400,300] screen = pygame.</description>
      </item>
      
      <item>
        <title>오차와 잔차</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/error_residual/</link>
        <pubDate>Mon, 15 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/error_residual/</guid>
        <description>오차 &amp;amp; 잔차  오차(error): 모집단 회귀식 예측값 - 실제 관측값 잔차(residual): 표본집단 회귀식 예측값 - 실제 관측값  </description>
      </item>
      
      <item>
        <title>주식</title>
        <link>https://jiwooblog.netlify.app/updates/stock/</link>
        <pubDate>Fri, 22 Jan 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/stock/</guid>
        <description>국내/해외 지수 및 환율 1월 넷째주    INDEX 1.18(월) 1.19(화)     코스피 3013.93 ▼71.97(2.33%) 3092.66 ▲78.73(2.61%)   코스닥 944.67 ▼19.77(2.05%) 957.75 ▲13.08(1.38%)   S&amp;amp;P500 3768.25 ▼27.29(0.72%) 3768.25 ▼27.27(0.72%)   나스닥 12998.50 ▼114.14(0.87%) 12998.50 ▼114.14(0.87%)   환율 1103.90 ▲4.50(0.41%) 1102.90 ▼1.00(0.09%)    1월 셋째주 1.15(금) 오후 10:36 기준    INDEX VALUE Change Rate     코스피 3085.</description>
      </item>
      
      <item>
        <title>API</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part3_1/</link>
        <pubDate>Tue, 12 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part3_1/</guid>
        <description>Part 3. API는 무엇인가 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. API 정의  Application Programming Interface 두 개의 시스템이 서로 상호작용하기 위한 인터페이스(데이터 주고 받기!) 일반적으로 API는 REST API를 지칭한다. ex) Web API: 웹을 통해 외부 서비스들로부터 정보를 불러오는 API  2. API 접근 권한  Authentication: Identity가 맞다는 증명 Authorization: API를 통한 어떠한 액션을 허용 둘은 다르다! Athentication을 하였다고 하더라도 Authorization을 허용하지 않을 수 있다! Security 이슈가 중요하다.</description>
      </item>
      
      <item>
        <title>Conjugacy</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb03/</link>
        <pubDate>Thu, 07 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb03/</guid>
        <description>Chapter 03. One-parameter Models 본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
Binomial Model Prior: $\theta \text{ ~ } Beta(a,b)$
Likelihood: $Y|\theta \text{ ~ } Binomial(n, \theta) $
Posterior: $\theta|y \text{ ~ } Beta(a+y, b+n-y) $ a: prior 성공횟수, b: prior 실패횟수, $\omega$=a+b: concentration $E[\theta|y] = \frac{a+y}{a+b+n} = \frac{n}{a+b+n}\times\frac{y}{n} + \frac{a+b}{a+b+n}\times\frac{a}{a+b}$ where $\frac{y}{n}$ = sample mean, $\frac{a}{a+b}$ = prior expectation Posterior Predictive
$n^* = 1$일 때 : $\tilde{Y}|y \text{ ~ } Ber(\frac{a+y}{a+b+n})$</description>
      </item>
      
      <item>
        <title>April 2021</title>
        <link>https://jiwooblog.netlify.app/updates/diary/2021_04/</link>
        <pubDate>Thu, 01 Apr 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/diary/2021_04/</guid>
        <description>2021.04.04  올해 4월 1일에 TexLive가 2021년 버전으로 업그레이드되면서 Rmarkdown으로 문서화 작업을 다시 구성하는데에 이틀 정도 애를 먹었다. 한번 까는 까는 데에만 한시간은 족히 걸렸는데, 정확히 무엇이 잘못된지를 몰라서 여러 번 반복했다. 결국 그거 자체는 설치를 잘 한 것이었다. 문제는 install.packages(&#39;tinytex&#39;), library(tinytex)를 안 했다는 것이다&amp;hellip; 내년에 또 업데이트가 된다면 미리미리 알아두고 있어야겠다&amp;hellip;  2012.04.09  졸업요건 확인을 마쳤다. 오전까지 &amp;lsquo;제2외국어이수여부&amp;rsquo;가 빈칸이어서 전화를 했는데, 그사이에 P로 되어있었다.  </description>
      </item>
      
      <item>
        <title>base</title>
        <link>https://jiwooblog.netlify.app/posts/r/base/</link>
        <pubDate>Fri, 19 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/base/</guid>
        <description>base 함수 중 유용한 함수 훑어보기 1 2  library(tidyverse) library(palmerpenguins)   1. split   split 예시  1 2 3 4 5 6 7 8 9  #1col기준으로 분리 penguins %&amp;gt;% split(.$species) -&amp;gt; split1 #2col기준으로 분리 penguins %&amp;gt;% split(list(.$species, .$island)) -&amp;gt; split2 #10row기준으로 분리(row개수 안맞으면 error) splitrow &amp;lt;- rep(1:35, c(rep(10, 34), 4)) splitrow   ## [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3## [26] 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5## [51] 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 8 8 8 8 8## [76] 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 10## [101] 11 11 11 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12 12 12 13 13 13 13 13## [126] 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 15 15 15 15 15 15 15 15 15 15## [151] 16 16 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 17 18 18 18 18 18## [176] 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20## [201] 21 21 21 21 21 21 21 21 21 21 22 22 22 22 22 22 22 22 22 22 23 23 23 23 23## [226] 23 23 23 23 23 24 24 24 24 24 24 24 24 24 24 25 25 25 25 25 25 25 25 25 25## [251] 26 26 26 26 26 26 26 26 26 26 27 27 27 27 27 27 27 27 27 27 28 28 28 28 28## [276] 28 28 28 28 28 29 29 29 29 29 29 29 29 29 29 30 30 30 30 30 30 30 30 30 30## [301] 31 31 31 31 31 31 31 31 31 31 32 32 32 32 32 32 32 32 32 32 33 33 33 33 33## [326] 33 33 33 33 33 34 34 34 34 34 34 34 34 34 34 35 35 35 351  nrow(penguins)   ## [1] 3441  penguins %&amp;gt;% split(splitrow) -&amp;gt; split3      </description>
      </item>
      
      <item>
        <title>pygame[응용]</title>
        <link>https://jiwooblog.netlify.app/posts/python/pygame_2/</link>
        <pubDate>Thu, 18 Feb 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/python/pygame_2/</guid>
        <description>Pygame 응용 본 포스팅은 해당 영상을 적극참고 하였습니다.
코드import os import pygame ############################################################################## # 기본 초기화 (반드시 해야 하는 것들) pygame.</description>
      </item>
      
      <item>
        <title>Monte Carlo Method</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb04/</link>
        <pubDate>Thu, 21 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb04/</guid>
        <description>Chapter 04. Monte Carlo Approximation 본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
Monte Carlo Method Monte Carlo Method는 이름은 거창해보이지만 사실 그 방법은 매우 간단하다.
우선, 사후분포($p(\theta|y_1,...,y_n)$)로부터 S개의 random sample을 뽑는다.
$$\theta^{1}, &amp;hellip;, \theta^{S} \ \stackrel{iid}{\sim} \ p(\theta|y_1, &amp;hellip;, y_n) $$
그러면 S가 커질수록 {$\theta^{1}, ..., \theta^{S}$}는 근사적으로 사후분포($p(\theta|y_1,...,y_n)$)를 따른다.
이를 통해 $E[\theta|y_1, ..., y_n]$, $Var[\theta|y_1, ..., y_n]$부터 중앙값, $\alpha$ percentile 등의 통계량값들을 근사적으로 계산할 수 있다.
이때 approximate Monte Carlo Standard error은 $\sqrt{\hat{\sigma}^2/S}$이다.</description>
      </item>
      
      <item>
        <title>Spotify API</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part3_2/</link>
        <pubDate>Tue, 12 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part3_2/</guid>
        <description>Part 3. API는 무엇인가 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Spotify App 생성 및 토큰 발급 Client Credentials Flow 1 2 3 4 5  { &amp;#34;access_token&amp;#34;: &amp;#34;NgCXRKc...MzYjw&amp;#34;, &amp;#34;token_type&amp;#34;: &amp;#34;bearer&amp;#34;, &amp;#34;expires_in&amp;#34;: 3600, }    client id, client secret을 제공하면 우리는 3600초, 즉 1시간동안 사용할 수 있다.  2. Python 기본 1 2 3 4 5 6 7 8 9 10 11  import sys def main(): print(&amp;#39;fastcampus&amp;#39;) #python으로 실행했을 때, 해당 py파일 이름이 전달되면, main()을 실행하라 if __name__ == &amp;#39;__main__&amp;#39;: main() #직접 py파일이 실행 안되고, import spotify_api와 같이 모듈처럼 import되면, ~~를 print하라.</description>
      </item>
      
      <item>
        <title>Normal Model</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb05/</link>
        <pubDate>Thu, 21 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb05/</guid>
        <description>Chapter 05. Normal Model 본 포스팅은 First Course in Bayesian Statistical Methods와 Bayesian Data Analysis를 참고하였다.
Warm up!  Gamma Distribution Inverse Gamma Distribution Scaled Inverse Chi-squared Distribution  1. Single Parameter Conjugacy 평균이나 분산 중 하나만을 모르는 경우
1-1. 평균을 모르는 경우 Prior: $\mu \text{ ~ } N(\mu_0, \tau_0^{2})$
Likelihood: $y|\mu \text{ ~ } N(\mu, \sigma^2)$
Posterior: $\mu|y \text{ ~ } N(\mu_n, \tau_n^{2})$
where $\frac{1}{\tau_n^{2}} = \frac{1}{\tau_0^{2}} + \frac{n}{\sigma^2}$ and $\mu_n = \frac{\frac{1}{\tau_0^{2}}}{\frac{1}{\tau_0^{2}} + \frac{n}{\sigma^2}}\mu_0 + \frac{\frac{n}{\sigma^2}}{\frac{1}{\tau_0^{2}} + \frac{n}{\sigma^2}}\bar{y} $</description>
      </item>
      
      <item>
        <title>RDBMS</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_1/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_1/</guid>
        <description>Part 4. 데이터의 이해와 데이터베이스 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
0. Data Type  numeric data/time character/string unicode character/string binary miscellaneous  1. Relational Database(RDB)  모든 데이터를 2차원의 테이블로 표현 하나 이상의 테이블로 구성 Entity-Relationship 모델 Normalization (Reduce Redundacy)  2. AWS 클라우드 MySQL 데이터베이스 생성  aws.amazon.com &amp;gt; RDS &amp;gt; 데이터 생성 Templates &amp;gt; Free Tier로 설정 (과금 예방) Public Access 허용하기 VPC에서 인바운드 규칙에 MySql 추가하기  3.</description>
      </item>
      
      <item>
        <title>Gibbs Sampling</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb06/</link>
        <pubDate>Thu, 21 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb06/</guid>
        <description>Chapter 06. Posterior Approximation with the Gibbs sampler 본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
1. A Semi-conjugate prior distribution 2. Discrete approximations 3. Sampling from the conditional distributions 4. Gibbs Sampling 5. General properties of the Gibbs sampler 6. Introduction to MCMC diagnostics Conclusion semi-conjugate 분포를 모두 알면 full conditional probability를 아는 것과 거의 같다. 혹시 궁금한 점이나 잘못된 내용이 있다면, 댓글로 알려주시면 적극 반영하도록 하겠습니다. </description>
      </item>
      
      <item>
        <title>Spotify Data</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_2/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_2/</guid>
        <description>Part 4. 데이터의 이해와 데이터베이스 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Spotify 데이터 이해 Spotify Web API &amp;gt; get an artist
artist object 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  { &amp;#34;external_urls&amp;#34; : { &amp;#34;spotify&amp;#34; : &amp;#34;https://open.spotify.com/artist/0OdUWJ0sBjDrqHygGUXeCF&amp;#34; }, &amp;#34;followers&amp;#34; : { &amp;#34;href&amp;#34; : null, &amp;#34;total&amp;#34; : 306565 }, &amp;#34;genres&amp;#34; : [ &amp;#34;indie folk&amp;#34;, &amp;#34;indie pop&amp;#34; ], &amp;#34;href&amp;#34; : &amp;#34;https://api.</description>
      </item>
      
      <item>
        <title>July 2021</title>
        <link>https://jiwooblog.netlify.app/updates/diary/2021_07/</link>
        <pubDate>Thu, 01 Jul 2021 00:08:29 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/updates/diary/2021_07/</guid>
        <description>2021.07.03  연남동에서 내츄럴 와인을 처음으로 마셔보았다. (위치: 로제 드 미네)   RUE DE LA SOIF Rose Pet Nat: 자몽맛 와인    L&amp;rsquo;indolent: 당도 있는 화이트와인    2021.07.06  첫번째. 신촌 소담식당 / 클로리스  2021.07.10  두번째. 연희동 시오 / 떼뮤즐렛(페델리에 로제)  </description>
      </item>
      
      <item>
        <title>MVN</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb07/</link>
        <pubDate>Sun, 31 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb07/</guid>
        <description>Chapter 07. The Multivariate Normal Model 본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
1. Multivariate Normal Desity univariate model에 대해서 앞선 챕터에서 이야기를 많이 했지만, 사실 현실세계에서는 multivariate인 경우가 훨씬 많다.
1-1. Bivariate Normal   Bivariate Case  1 2 3 4 5  library(tidyverse) library(gridExtra) library(MASS) library(reshape2) library(ash)   1 2 3 4 5 6 7 8 9 10 11 12 13  #### 4-1. Draw yourself Figure 7.</description>
      </item>
      
      <item>
        <title>Python &amp; MySQL</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_3/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_3/</guid>
        <description>Part 4. 데이터의 이해와 데이터베이스 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Pymysql 패키지 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  import sys import requests import base64 import json import logging import pymysql #New library client_id = &amp;#39;&amp;#39; #직접 입력 client_secret = &amp;#39;&amp;#39; # 직접 입력 host = &amp;#39;&amp;#39; #host port = 3306 username = &amp;#39;&amp;#39; #user database = &amp;#39;&amp;#39; #db password = &amp;#39;&amp;#39; #passwd def main(): try: conn = pymysql.</description>
      </item>
      
      <item>
        <title>Hierarchical Model</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb08/</link>
        <pubDate>Sun, 31 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb08/</guid>
        <description>Chapter 08. Group Comparisons and Hierarchical Modeling 본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
Hierarchical Model은 그룹 간 그리고 그룹 내 variability를 설정하는 데에 유용하다.
 Hierarchical Model describes both with-in group and between-group variability.
 Hierarchical Model은 베이즈 통계가 다른 응용분야에 널리 퍼져 사용되는 결정적 계기가 되었다. 그리고 위의 그림을 통해서 알 수 있듯이, 층이 여러 개 이기 때문에 복잡한 상황에서도 Estimation을 할 수 있다는 장점이 있다.</description>
      </item>
      
      <item>
        <title>SQL 활용 (MySQL)</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_4/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_4/</guid>
        <description>Part 4. 데이터의 이해와 데이터베이스 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Artist Data 1  SELECT genre, COUNT(*) FROM artist_genres GROUP BY 1 ORDER BY 2 DESC LIMIT 20;   2. Artist Genre Analysis with SQL 1 2 3  SELECT popularity, name FROM artists ORDER BY 1 DESC LIMIT 20; SELECT genre, COUNT(*) FROM artists t1 JOIN artist_genres t2 ON t2.artist_id = t1.id WHERE t1.</description>
      </item>
      
      <item>
        <title>Bayesian Linear Regression</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb09/</link>
        <pubDate>Thu, 04 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/fcb09/</guid>
        <description>Chapter 09. Linear Regression본 포스팅은 First Course in Bayesian Statistical Methods를 참고하였다.
1. Linear Regression ModelLinear Regression Model: a particular type of smoothly changing model for $p(y|\boldsymbol{x})$ that specifies that the conditional expectation $E[Y|\boldsymbol{x}]$ has a form that is linear in a set of parameters
\[\int yp(y|\boldsymbol{x})dy = E[Y|\boldsymbol{x}] = \beta_1x_1 + \cdots + \beta_px_p = \boldsymbol{\beta}^T\boldsymbol{x}\]
Normal Linear Regression Model: 기존 Linear Regression Model에 추가해서, 아래의 조건이 추가된 것\[\epsilon_1, .</description>
      </item>
      
      <item>
        <title>NoSQL (DynamoDB)</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_5/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part4_5/</guid>
        <description>Part 4. 데이터의 이해와 데이터베이스 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
이 포스팅은 NoSQL 중 DynamoDB를 위주로 서술되어 있습니다.
1. NoSQL vs. RDB  Not Only SQL 차이점(1) 다이나믹 스키마  구조를 정의하지 않고도 Documents, Key Values 등을 생성 각각의 Document가 서로 다른 구조로 구성 가능 데이터베이스들마다 다른 syntax 필드 추가 가능   차이점(2) Scalabilty  SQL DB: vertically scalable - CPU, RAM, SSD로 용량 문제 해결결 NoSQL DB: horizontally scalable - Sharding, Partitioning로 용량 문제 해결    2.</description>
      </item>
      
      <item>
        <title>데이터 레이크</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_1/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_1/</guid>
        <description>Part 5. 데이터 엔지니어링 구축 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. 데이터 레이크 vs. 데이터 웨어하우스    구분 데이터 레이크 데이터 웨어하우스     Data Structure Raw Processed   Purpose of Data Not yet Determined In Use   Users Data Scientists Business Professionals   Accessibility High / Quick to update Complicated / Costly     Schema의 차이가 가장 크다.</description>
      </item>
      
      <item>
        <title>S3 Athena</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_2/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_2/</guid>
        <description>Part 5. 데이터 엔지니어링 구축 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Presto 2. Serverless 3. AWS Athena 4. 테이블 생성 5. 데이터 쿼리 </description>
      </item>
      
      <item>
        <title>Apache Spark</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_3/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_3/</guid>
        <description>Part 5. 데이터 엔지니어링 구축 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Apache Spark 2. EC-2 제플린 인스턴스 생성 </description>
      </item>
      
      <item>
        <title>Pyspark</title>
        <link>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_4/</link>
        <pubDate>Wed, 13 Jan 2021 10:09:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/dataengineering/fc_part5_4/</guid>
        <description>Part 5. 데이터 엔지니어링 구축 본 포스팅은 패스트캠퍼스(FastCampus)의 데이터 엔지니어링 올인원 패키지 Online을 참고하였습니다.
1. Spark RDD 2. Spark Dataframes 3. Select Subset Columns 4. Filter Rows 5. Create UDF 6. Join 7. SQL 8. 데이터분석 with Spark 9. 시각화 with Spark </description>
      </item>
      
      <item>
        <title>편향-분산 Tradeoff</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/bias_variance/</link>
        <pubDate>Wed, 10 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/bias_variance/</guid>
        <description>Bias-Variance Tradeoff $$\text{let } y = f(x) + \varepsilon, \text{ where } \varepsilon \text{ ~ } N(0, \sigma^2)$$
\begin{align}MSE(\hat{y}) &amp;amp;= E[(y-\hat{y})^2] \\&amp;amp;= E[(f(x) + \varepsilon - \hat{f}(x))^2] \\&amp;amp;= E[(f(x)-\hat{f}(x))^2] + E[\varepsilon^2] + 2E[\varepsilon(f(x) - \hat{f}(x))] \\&amp;amp;= E[(f(x) - E(\hat{f}(x)) + E(\hat{f}(x)) - \hat{f}(x) )^2] + \sigma^2 \\&amp;amp;= E[(f(x) - E(\hat{f}(x)))^2] + E[(\hat{f}(x)-E(\hat{f}(x)))^2] + 2(f(x) - E(\hat{f}(x)))E[\hat{f}(x) - E(\hat{f}(x))] + \sigma^2 \\&amp;amp;= {bias[\hat{f}(x)]}^2 + Var(\hat{f}(x)) + \sigma^2 \\&amp;amp;= bias^2(\hat{y}) + Var(\hat{y}) + \sigma^2\end{align}</description>
      </item>
      
      <item>
        <title>F1 Score</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/performance_measure/</link>
        <pubDate>Sun, 07 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/performance_measure/</guid>
        <description>Performance Measure 성능을 평가하는 지표에는 여러 가지가 있다. 그중에서 대표적인 몇 개를 알아보고자 한다.
1. Accuracy $$Accuracy = \frac{\text{correctly predicted}}{\text{all dataset}}$$
Accuracy는 balanced data가 아니라면 좋은 지표로서의 역할을 하기 힘들다. 왜냐하면 A,B,C,D라는 그룹이 있을 때, B~D가 각각 10개의 케이스 밖에 없고 A가 혼자서 500개의 케이스가 있다고 가정한다면 Accuracy 지표는 A 그룹에 의해 좌지우지 될 것이기 때문이다.
2. Precision  Given a class prediction from the classifier, how likely is to be correct?</description>
      </item>
      
      <item>
        <title>Fisher Information</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/fisher_information/</link>
        <pubDate>Sun, 07 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/fisher_information/</guid>
        <description>Fisher Information Fisher information은 score function의 분산이다. 이 점을 명심해서 의미를 생각해보자. 아래는 Fisher information을 다양한 꼴로 표현해본 것이다.
\begin{align}I(\theta;x) &amp;amp;= Var(\frac{\partial}{\partial\theta}logf(x;\theta)) \\&amp;amp;= E\bigg[\Big(\frac{\partial}{\partial\theta}logf(x;\theta)\Big)^2\bigg] \\&amp;amp;= -E\bigg[\frac{\partial^2}{\partial\theta^2}log(f(x;\theta)\bigg]\end{align}
계산 증명 위에 대한 자세한 계산 증명은 아래와 같다.
우선, score function의 평균이 0임을 구하는 것부터 시작한다.
$$\int \frac{\partial}{\partial\theta}logf(x;\theta)f(x;\theta)=0 $$
양변을 $\theta$로 미분해준다.
$$\int\frac{\partial^2}{\partial\theta^2}logf(x;\theta)f(x;\theta)dx + \int\frac{\partial}{\partial\theta}logf(x;\theta)f&#39;(x;\theta)dx = 0 $$
오른쪽 부분을 우변으로 이항하여 정리해주면 아래와 같다.
\begin{align}E\bigg[\frac{\partial^2}{\partial\theta^2}logf(x;\theta)\bigg] &amp;amp;= -\int\frac{\partial}{\partial\theta}logf(x;\theta)f&#39;(x;\theta)dx \\ &amp;amp;= -\int\frac{\partial}{\partial\theta}logf(x;\theta)\frac{f&#39;(x;\theta)}{f(x;\theta)}f(x;\theta)dx \\&amp;amp;= -\int\bigg(\frac{\partial}{\partial\theta}logf(x;\theta)\bigg)^2f(x;\theta)dx \\&amp;amp;= -E\bigg[\Big(\frac{\partial}{\partial\theta}logf(x;\theta)\Big)^2\bigg]\end{align}</description>
      </item>
      
      <item>
        <title>Jeffrey&#39;s Prior</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/jeffrey_prior/</link>
        <pubDate>Sun, 07 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/jeffrey_prior/</guid>
        <description>Jeffrey&amp;rsquo;s Prior 1. uninformative prior의 제한점 uninformative prior를 임의로 주게 될 경우, 여러 문제점이 있을 수 있는데 그 중 하나는 변수변환에 취약해질 수 있다는 점이다.
예를 들어, $p(\theta) \propto 1$라고 uninformative prior를 주자. 그리고 $ \phi = exp(\theta)$라고 가정해보자.
\begin{align}p(\phi) &amp;amp;\propto p(\theta) \bigg|\frac{d\theta}{d\phi}\bigg| \\&amp;amp;\propto \frac{1}{\phi} \neq 1\end{align}
변수변환 후에는 prior가 uninformative하지 않게 되어버림을 확인할 수 있다.
2. Jeffrey&amp;rsquo;s prior 그렇다면 어떻게 해야 변수변환에 강건한 prior를 줄 수 있을까?</description>
      </item>
      
      <item>
        <title>Score Function</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/statistics/score_function/</link>
        <pubDate>Sun, 07 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/statistics/score_function/</guid>
        <description>Score Function $X \text{ ~ } f(x;\theta)$일 때, score function $s(\theta;x)$은 다음과 같이 정의한다.
$$\frac{\partial}{\partial\theta}logf(x;\theta) $$
평균 계산 증명 \begin{align}E\big[s(\theta;x) \big] &amp;amp;= \int\bigg[\frac{\partial}{\partial\theta}logf(x;\theta)\bigg]f(x;\theta)dx \\&amp;amp;= \int\frac{f&#39;(x;\theta)}{f(x;\theta)}f(x;\theta)dx \\&amp;amp;= \int f&#39;(x;\theta)dx \\&amp;amp;= \frac{\partial}{\partial\theta}\int f(x;\theta)dx \\&amp;amp;= \frac{\partial}{\partial\theta}1 = 0\end{align}
의미 score function은 log likelihood의 기울기를 나타낸다는 데에서 의미가 있다.
score function의 평균이 0이라는 것의 의미를 그래프를 likelihood 그래프를 상상하여 생각해보자.</description>
      </item>
      
      <item>
        <title>Empirical Bayes</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/empricialbayes/</link>
        <pubDate>Sat, 06 Mar 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/empricialbayes/</guid>
        <description>Empirical Bayes 베이지안은 기본적으로 prior, 즉 사전확률을 설정한다.
그런데 이때 data density(histogram)에 비슷한 모양을 갖도록 prior를 설정하고자 하는 경우도 있는데, 이를 Empirical Bayes라고 한다.
사전확률인데 왜 데이터를 보고 설정하는지에 대한 의문이 생길 수도 있긴 한다&amp;hellip;
혹시 궁금한 점이나 잘못된 내용이 있다면, 댓글로 알려주시면 적극 반영하도록 하겠습니다. </description>
      </item>
      
      <item>
        <title>Gibbs Sampler</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/gibbs_sampler/</link>
        <pubDate>Tue, 23 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/gibbs_sampler/</guid>
        <description>Gibbs Sampler 기본 원리 (추후 업데이트)
예시 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  ## Data load  data = dget(&amp;#39;https://www2.stat.duke.edu/~pdh10/FCBS/Inline/yX.o2uptake&amp;#39;) y = data[,1] X = data[,-1] inv = solve ## set prior g = length(y) nu0 = 1 s20 = summary(lm(y~-1+X))$sigma^2 n = length(y) p = ncol(X) ## setup S = 1000 set.</description>
      </item>
      
      <item>
        <title>fread</title>
        <link>https://jiwooblog.netlify.app/posts/r/fread/</link>
        <pubDate>Mon, 08 Feb 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/fread/</guid>
        <description>fread 패키지로 대용량 데이터 빠르게 불러오기 약 24000행의 샘플 csv가 있다고 가정하자. 그렇다면 fread와 read.csv의 성능은 다음과 같다.
1 2 3 4 5 6 7 8 9 10 11  library(data.table) fread(&amp;#39;sample.csv&amp;#39;) #약 24000x3 system.time(fread(&amp;#39;sample.csv&amp;#39;)) # 사용자 시스템 elapsed  # 0.02 0.00 0.01  system.time(read.csv(&amp;#39;sample.csv&amp;#39;)) # 사용자 시스템 elapsed  # 0.74 0.03 0.77   read.csv는 0.77초가 걸리는 데에 반해 fread는 0.01초 만에 읽어왔다.
이외에도 3백만 행의 csv으로 실험해본 결과, 각각 2초와 33초로 그 성능 차이가 더욱 도드라짐을 알 수 있었다.</description>
      </item>
      
      <item>
        <title>BDA Example</title>
        <link>https://jiwooblog.netlify.app/posts/statistics/bayesian/bda_example/</link>
        <pubDate>Wed, 20 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/statistics/bayesian/bda_example/</guid>
        <description>y &amp;lt;- c(93, 112, 122, 135, 122, 150, 118, 90, 124, 114)n &amp;lt;- length(y)s2 &amp;lt;- var(y)my &amp;lt;- mean(y) # helper functions to sample from and evaluate# scaled inverse chi-squared distributionrsinvchisq &amp;lt;- function(n, nu, s2, ...) nu*s2 / rchisq(n , nu, ...)dsinvchisq &amp;lt;- function(x, nu, s2){exp(log(nu/2)*nu/2 - lgamma(nu/2) + log(s2)/2*nu - log(x)*(nu/2+1) - (nu*s2/2)/x)}ns &amp;lt;- 1000sigma2 &amp;lt;- rsinvchisq(ns, n-1, s2)mu &amp;lt;- my + sqrt(sigma2/n)*rnorm(length(sigma2))sigma &amp;lt;- sqrt(sigma2)ynew &amp;lt;- rnorm(ns, mu, sigma)t1l &amp;lt;- c(90, 150)t2l &amp;lt;- c(10, 60)nl &amp;lt;- c(50, 185)t1 &amp;lt;- seq(t1l[1], t1l[2], length.</description>
      </item>
      
      <item>
        <title>test</title>
        <link>https://jiwooblog.netlify.app/posts/r/test/</link>
        <pubDate>Fri, 08 Jan 2021 10:08:56 +0900</pubDate>
        
        <guid>https://jiwooblog.netlify.app/posts/r/test/</guid>
        <description>.scroll-100 {max-height: 100px;overflow-y: auto;background-color: &#39;white&#39;;}pre {max-height: 300px;overflow-y: auto;background-color: &#39;white&#39;;}pre[class] {max-height: 100px;background-color: &#39;green&#39;;}# plotly```rlibrary(ggplot2)library(plotly)library(gapminder)1 2 3 4 5 6 7 8  p &amp;lt;- gapminder %&amp;gt;% filter(year==1977) %&amp;gt;% ggplot( aes(gdpPercap, lifeExp, size = pop, color=continent)) + geom_point() + scale_x_log10() + theme_bw() ggplotly(p)   {&#34;</description>
      </item>
      
      <item>
        <title>차를 맛보는 여인</title>
        <link>https://jiwooblog.netlify.app/blog/210711_the_lady_tasting_tea/</link>
        <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/210711_the_lady_tasting_tea/</guid>
        <description>&lt;p&gt;[독후감] 차를 맛보는 여인&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>Natural Scene Categories Revealed in Distributed Patterns of Activity in the Human Brain</title>
        <link>https://jiwooblog.netlify.app/blog/210312_natural_scene_categorization/</link>
        <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/210312_natural_scene_categorization/</guid>
        <description>&lt;p&gt;Natural Scene Categories Revealed in Distributed Patterns of Activity in the Human Brain(Walther, 2009)&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>빅콘테스트 NS Shop&#43; 홈쇼핑 실적 예측</title>
        <link>https://jiwooblog.netlify.app/blog/bigcontest2020/</link>
        <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/bigcontest2020/</guid>
        <description>&lt;p&gt;빅콘테스트 챔피언리그 데이터분석 분야&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>수소차 충전소 입지 추천</title>
        <link>https://jiwooblog.netlify.app/blog/rhino/</link>
        <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/rhino/</guid>
        <description>&lt;p&gt;서울시 수소차 충전소 입지 추천&lt;br /&gt;
연세대학교 데이터사이언스입문 수업에서 진행한 프로젝트&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>Markdown Syntax Guide</title>
        <link>https://jiwooblog.netlify.app/blog/markdown-syntax/</link>
        <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/markdown-syntax/</guid>
        <description>&lt;p&gt;마크다운 가이드라인&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>How to Link</title>
        <link>https://jiwooblog.netlify.app/blog/rich-content/</link>
        <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/rich-content/</guid>
        <description>&lt;p&gt;Youtube 링크 거는 법&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>Placeholder Text</title>
        <link>https://jiwooblog.netlify.app/blog/placeholder-text/</link>
        <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/placeholder-text/</guid>
        <description>&lt;p&gt;이건 정확히 무엇인지 모르겠다..&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>Emoji Support</title>
        <link>https://jiwooblog.netlify.app/blog/emoji-support/</link>
        <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://jiwooblog.netlify.app/blog/emoji-support/</guid>
        <description>&lt;p&gt;이모지 관련&lt;/p&gt;</description>
      </item>
      
    
  </channel>
</rss>